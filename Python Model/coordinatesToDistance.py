#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Mar  4 15:58:28 2022

@author: zhr
"""

#converting latitude and longitude to their resultant distances


from math import dist
from scipy.spatial import distance_matrix

main_hub = [51.366169, -2.591542]

latitudes = [51.366169, 51.60857, 51.59489, 51.54250, 51.51728, 51.52428, 51.50346, 51.47721, 51.48263, 51.45803, 51.45477, 51.48086, 51.48566, 51.44346, 51.43292, 51.41148, 51.41680, 51.41636, 51.40716, 51.37937, 51.28918, 51.38355, 51.38902, 51.34828]
longitudes = [-2.591542, -2.52529, -2.40161, -2.41379, -2.54351, -2.61623, -2.69272, -2.61516, -2.48816, -2.50766, -2.58755, -2.68789, -2.76798, -2.85710, -2.75647, -2.73240, -2.60020, -2.50290, -2.45601, -2.36007, -2.462995, -2.71366, -2.82224, -2.96206]


denseAdd = [[51.50005, -2.52120], [51.44172, -2.61968], [51.47340, -2.62600], [51.46845, -2.60639], [51.45837, -2.54177], [51.46688, -2.54177], [51.50917, -2.57717], [51.47726, -2.61518], [51.45064, -2.54512], [51.40603, -2.55960]]
sparseAdd = [[51.51635, -0.12772], [53.48483, -2.24270], [52.49032, -1.88904], [53.80592, -1.54741], [55.86810, -4.25238], [50.91791, -1.40633], [53.40637, -2.98061], [54.97990, -1.61736], [52.95669, -1.15564], [53.38499, -1.46858]]
coordinates = [[51.366169, -2.591542],[51.60857, -2.52529], [51.59489, -2.40161], [51.54250, -2.41379], [51.51728, -2.54351], [51.52428, -2.61623], [51.50346, -2.69272], [51.47721, -2.61516], [51.48263, -2.48816], [51.45803, -2.50766], [51.45477, -2.58755], [51.48086, -2.68789], [51.48566, -2.76798], [51.44346, -2.85710], [51.43292, -2.75647], [51.41148, -2.73240], [51.41680, -2.60020], [51.41636, -2.50290], [51.40716, -2.45601], [51.37937, -2.36007], [51.28918, -2.462995], [51.38355, -2.71366], [51.38902, -2.82224], [51.34828, -2.96206]]

# Coordinates of original + sparse/dense coords
sCoord = coordinates + sparseAdd
dCoord = coordinates + denseAdd

#print(coordinates[1])
distanceMatrix = distance_matrix(coordinates, coordinates)
SparseDM = distance_matrix(sCoord, sCoord)
DenseDM = distance_matrix(dCoord, dCoord)

#print(distanceMatrix)


